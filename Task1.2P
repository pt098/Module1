// Define pin constants
const int buttonPin = 2;     // Button connected to pin 2 (interrupt pin)
const int ledPin = 13;       // LED connected to pin 13
volatile int ledState = LOW; // LED state, volatile because itâ€™s modified in ISR
volatile bool stateChanged = false; // Flag to indicate state change

// Interrupt Service Routine (ISR) to toggle LED
void toggleLED() {
    ledState = !ledState;      // Flip the LED state (HIGH to LOW or LOW to HIGH)
    digitalWrite(ledPin, ledState); // Update the LED
    stateChanged = true;       // Set flag to notify loop()
}

void setup() {
    pinMode(ledPin, OUTPUT);   // Set LED pin as output
    pinMode(buttonPin, INPUT); // Set button pin as input
    // Attach interrupt to buttonPin, trigger on RISING edge, call toggleLED
    attachInterrupt(digitalPinToInterrupt(buttonPin), toggleLED, RISING);
    Serial.begin(9600);        // Start Serial communication for monitoring
    Serial.println("System started. Press button to toggle LED.");
}

void loop() {
    // Check if the state changed due to an interrupt
    if (stateChanged) {
        if (ledState == HIGH) {
            Serial.println("LED is ON");  // Print when LED is on
        } else {
            Serial.println("LED is OFF"); // Print when LED is off
        }
        stateChanged = false; // Reset the flag
    }
    // Add other non-critical tasks here if needed
}
